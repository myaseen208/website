, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
library(pdftools)
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(pacman)
library(pak)
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgdepends)
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package) |>
roworder(Package)
dt1
dt2 <-
tools::CRAN_package_db() |>
qDT() |>
fselect(Package) |>
roworder(Package)
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(pacman)
library(pak)
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgdepends)
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package, InstalledVersion = Version) |>
roworder(Package)
dt1
dt2 <-
tools::CRAN_package_db() |>
qDT() |>
fselect(Package, CRANVersion = Version) |>
roworder(Package)
dt2
dt12 <-
left_join.(dt1, dt2, by = "Package") |>
qDT() |>
fsubset(InstalledVersion != CRANVersion) |>
funique() |>
fmutate(
InstalledVersion = str_remove_all(string = InstalledVersion, pattern = "\\.|-") |>
parse_number()
, CRANVersion      = str_remove_all(string = CRANVersion, pattern = "\\.|-") |>
parse_number()
) |>
fsubset(InstalledVersion < CRANVersion)
dt12
pkg_install(
pkg          = dt12 |>
fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
pkg_install("statgenSTA")
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package, InstalledVersion = Version) |>
roworder(Package)
dt1
dt12 <-
left_join.(dt1, dt2, by = "Package") |>
qDT() |>
fsubset(InstalledVersion != CRANVersion) |>
funique() |>
fmutate(
InstalledVersion = str_remove_all(string = InstalledVersion, pattern = "\\.|-") |>
parse_number()
, CRANVersion      = str_remove_all(string = CRANVersion, pattern = "\\.|-") |>
parse_number()
) |>
fsubset(InstalledVersion < CRANVersion)
dt12
pkg_install(
pkg          = dt12 |>
fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package, InstalledVersion = Version) |>
roworder(Package)
dt1
dt12 <-
left_join.(dt1, dt2, by = "Package") |>
qDT() |>
fsubset(InstalledVersion != CRANVersion) |>
funique() |>
fmutate(
InstalledVersion = str_remove_all(string = InstalledVersion, pattern = "\\.|-") |>
parse_number()
, CRANVersion      = str_remove_all(string = CRANVersion, pattern = "\\.|-") |>
parse_number()
) |>
fsubset(InstalledVersion < CRANVersion)
dt12
pkg_install(
pkg          = dt12 |>
fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
C:/Users/hp/Downloads/dtupdate.R
library(dtupdate)
library(dtupdate)
github_update(
auto.install = c(FALSE, TRUE)[2]
, ask          = c(FALSE, TRUE)[1]
, widget       = c(FALSE, TRUE)[1]
, dependencies = c(FALSE, TRUE)[2]
, libpath      = .libPaths()[1]
)
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(pacman)
library(dtupdate)
github_update(
auto.install = c(FALSE, TRUE)[2]
, ask          = c(FALSE, TRUE)[1]
, widget       = c(FALSE, TRUE)[1]
, dependencies = c(FALSE, TRUE)[2]
, libpath      = .libPaths()[1]
)
pkg_install("tidyverse/tidyverse")
pkg_install("markfairbanks/tidytable")
pkg_install("fastverse/fastverse")
pkg_install("yihui/knitr")
pkg_install("tidymodels/broom", ask = FALSE)
pkg_install("tidymodels/broom", ask = FALSE)
github_update(
auto.install = c(FALSE, TRUE)[2]
, ask          = c(FALSE, TRUE)[1]
, widget       = c(FALSE, TRUE)[1]
, dependencies = c(FALSE, TRUE)[2]
, libpath      = .libPaths()[1]
)
library(pak)
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgdepends)
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package, InstalledVersion = Version) |>
roworder(Package)
dt1
dt2 <-
tools::CRAN_package_db() |>
qDT() |>
fselect(Package, CRANVersion = Version) |>
roworder(Package)
dt2
dt12 <-
left_join.(dt1, dt2, by = "Package") |>
qDT() |>
fsubset(InstalledVersion != CRANVersion) |>
funique() |>
fmutate(
InstalledVersion = str_remove_all(string = InstalledVersion, pattern = "\\.|-") |>
parse_number()
, CRANVersion      = str_remove_all(string = CRANVersion, pattern = "\\.|-") |>
parse_number()
) |>
fsubset(InstalledVersion < CRANVersion)
dt12
pkg_install(
pkg          = dt12 |>
fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
pdftools::pdf_convert(
pdf       = "Khuda_Ham_Ko_Aisi_Khudi.pdf"
, format    = "png"
, pages     = NULL
, filenames = "Khuda_Ham_Ko_Aisi_Khudi.png"
, dpi       = 300
)
setwd("D:/MYaseen208_B0-22-7A-E9-23-9B/Notes/Urdu")
library(pdftools)
pdftools::pdf_convert(
pdf       = "Khuda_Ham_Ko_Aisi_Khudi.pdf"
, format    = "png"
, pages     = NULL
, filenames = "Khuda_Ham_Ko_Aisi_Khudi.png"
, dpi       = 300
)
##----Set-WD----
setwd("D:/MYaseen208_B0-22-7A-E9-23-9B/Consultancy/BISP/01_All_Office_Letters")
library(pdftools)
library(qpdf)
library(furrr)
qpdf::pdf_subset(
input    = "2022-12-01_All_Office_Letters.pdf"
, pages    = 1
, output   = "2022-12-01_Letter1.pdf"
, password = ""
)
##----Set-WD----
setwd("D:/MYaseen208_B0-22-7A-E9-23-9B/Consultancy/BISP/01_All_Office_Letters")
library(pdftools)
library(qpdf)
library(furrr)
qpdf::pdf_subset(
input    = "2022-12-01_All_Office_Letters.pdf"
, pages    = 1
, output   = "2022-12-01_Letter1.pdf"
, password = ""
)
system(paste(getOption("pdfviewer"), "2022-12-01_Letter1.pdf"))
pdftools::pdf_convert(
pdf       = "2022-12-01_Letter1.pdf"
, format    = "png"
, pages     = NULL
, filenames = "2022-12-01_Letter1.png"
, dpi       = 300
)
getwd()
##------------------------------------------------------------------------------
#  Loading R Packages
##------------------------------------------------------------------------------
options(future.rng.onMisuse = "ignore")
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1)
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
Packages <-
c(
"brew"
, "knitr"
, "kableExtra"
, "tidyverse"
, "tidytable"
, "fastverse"
, "stringi"
, "furrr"
, "readxl"
, "scales"
, "ggthemes"
, "desplot"
, "metan"
, "statgenSTA"
, "statgenGxE"
, "lmerTest"
, "emmeans"
, "multcomp"
, "broom"
, "janitor"
, "splitstackshape"
)
sort(Packages)
dput(sort(Packages))
Packages <-
c(
"brew"
, "broom"
, "desplot"
, "emmeans"
, "fastverse"
, "furrr"
, "ggthemes"
, "janitor"
, "kableExtra"
, "knitr"
, "lmerTest"
, "multcomp"
, "metan"
, "readxl"
, "scales"
, "splitstackshape"
, "statgenSTA"
, "statgenGxE"
, "stringi"
, "tidytable"
, "tidyverse"
)
dput(sort(Packages))
library( fmsb)
library(help= fmsb)
##------------------------------------------------------------------------------
#  Loading R Packages
##------------------------------------------------------------------------------
options(future.rng.onMisuse = "ignore")
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1)
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
Packages <-
c(
"agricolae"
, "brew"
, "broom"
, "caret"
, "desplot"
, "emmeans"
, "factoextra"
, "FactoMineR"
, "fastverse"
, "fmsb"
, "furrr"
, "GGally"
, "ggthemes"
, "janitor"
, "kableExtra"
, "knitr"
, "lme4"
, "lmerTest"
, "MASS"
, "metan"
, "multcomp"
, "readxl"
, "rhcoclust"
, "scales"
, "splitstackshape"
, "statgenGxE"
, "statgenSTA"
, "stringi"
, "tidytable"
, "tidyverse"
)
Packages[!(Packages %in% installed.packages()[ ,"Package"])]
Packages[!(Packages %in% installed.packages()[ ,"Package"])]
if (!require("pak")) install.packages("pak")
pak::pkg_install(
pkg          = Packages
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
Packages[!(Packages %in% installed.packages()[ ,"Package"])]
if (!require("pak")) install.packages("pak")
pak::pkg_install(
pkg          = Packages[!(Packages %in% installed.packages()[ ,"Package"])]
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
Packages[!(Packages %in% installed.packages()[ ,"Package"])]
if (!require("pak")) install.packages("pak")
pak::pkg_install(
pkg          = Packages[!(Packages %in% installed.packages()[ ,"Package"])]
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
pak::pkg_install(
pkg          = Packages[!(Packages %in% installed.packages()[ ,"Package"])]
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
##------------------------------------------------------------------------------
#  Loading R Packages
##------------------------------------------------------------------------------
options(future.rng.onMisuse = "ignore")
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1)
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
Packages <-
c(
"agricolae"
, "brew"
, "broom"
, "caret"
, "desplot"
, "emmeans"
, "factoextra"
, "FactoMineR"
, "fastverse"
, "fmsb"
, "furrr"
, "GGally"
, "ggthemes"
, "janitor"
, "kableExtra"
, "knitr"
, "lme4"
, "lmerTest"
, "MASS"
, "metan"
, "multcomp"
, "readxl"
, "rhcoclust"
, "scales"
, "splitstackshape"
, "statgenGxE"
, "statgenSTA"
, "stringi"
, "tidytable"
, "tidyverse"
)
Packages[!(Packages %in% installed.packages()[ ,"Package"])]
if (!require("pak")) install.packages("pak")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(Packages, character.only = TRUE)
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(pacman)
library(dtupdate)
github_update(
auto.install = c(FALSE, TRUE)[2]
, ask          = c(FALSE, TRUE)[1]
, widget       = c(FALSE, TRUE)[1]
, dependencies = c(FALSE, TRUE)[2]
, libpath      = .libPaths()[1]
)
pak::pkg_install(
pkg = "tidymodels/broom"
, ask = FALSE
)
library(pak)
library(tidyverse)
library(tidytable)
library(fastverse)
library(pkgdepends)
dt1 <-
installed.packages() |>
qDT() |>
fselect(Package, InstalledVersion = Version) |>
roworder(Package)
dt1
dt2 <-
tools::CRAN_package_db() |>
qDT() |>
fselect(Package, CRANVersion = Version) |>
roworder(Package)
dt2
dt12 <-
left_join.(dt1, dt2, by = "Package") |>
qDT() |>
fsubset(InstalledVersion != CRANVersion) |>
funique() |>
fmutate(
InstalledVersion = str_remove_all(string = InstalledVersion, pattern = "\\.|-") |>
parse_number()
, CRANVersion      = str_remove_all(string = CRANVersion, pattern = "\\.|-") |>
parse_number()
) |>
fsubset(InstalledVersion < CRANVersion)
dt12
pkg_install(
pkg          = dt12 |>
fsubset(Package %notin% c("class", "spatial")) |>
pull.(Package) |>
dput()
, upgrade      = c(TRUE, FALSE)[1]
, ask          = c(TRUE, FALSE)[2]
, dependencies = as_pkg_dependencies(deps = c(TRUE, FALSE)[1])
)
pkg_install("terra")
# rm(list = ls())
setwd("D:/MYaseen208_B0-22-7A-E9-23-9B/Consultancy/Mr._M._Yaseen/01Website/website")
getwd()
library(blogdown)
# Removing public directory
unlink(x = "public", recursive = TRUE, force = FALSE)
blogdown::stop_server()
blogdown::serve_site()
blogdown::hugo_build()
